<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="ur_robot_gazebo">
  <!--
    This is a top-level xacro instantiating the Gazebo-specific version of the
    'ur_robot' macro (ie: 'ur_robot_gazebo') and passing it values for all its
    required arguments.

    This file should be considered the Gazebo-specific variant of the file
    with the same name in the ur_description package. It accepts the same
    arguments, but instead of configuring everything for a real robot, will
    generate a Gazebo-compatible URDF with a ros_control hardware_interface
    attached to it.

    Only use this top-level xacro if you plan on spawning the robot in Gazebo
    'by itself', without any gripper or any other geometry attached.

    If you need to attach an end-effector, camera or need to integrate the
    robot into a larger workcell and want to spawn that as a single entity in
    Gazebo, DO NOT EDIT THIS FILE.

    Instead: create a new top-level xacro, give it a proper name, include the
    required '.xacro' files, instantiate the models (ie: call the macros) and
    connect everything by adding the appropriate joints.
  -->

  <!--Declare arguments -->
  <xacro:arg name="prefix"  default="sema/"/>
  <xacro:arg name="vg_name" default="vgc10/"/>
  <xacro:arg name="cb_name" default="conveyor_belt/"/>
  <xacro:arg name="dc_name" default="oak_d_pro/"/>

  <!-- sensors enabled -->
  <xacro:arg name="vgc10_enabled"         default="false" />
  <xacro:arg name="conveyor_belt_enabled" default="false" />
  <xacro:arg name="oak_d_enabled"         default="false" />

  <!-- yaml parameters -->
  <xacro:arg name="joint_limit_params" default="$(find sema_description)/config/ur10/joint_limits.yaml"/>
  <xacro:arg name="physical_params"    default="$(find sema_description)/config/ur10/physical_parameters.yaml"/>
  <xacro:arg name="kinematics_params"  default="$(find sema_description)/config/ur10/default_kinematics.yaml"/>
  <xacro:arg name="visual_params"      default="$(find sema_description)/config/ur10/visual_parameters.yaml"/>
 
  <!--
    Import main macro.

    NOTE: this imports the Gazebo-wrapper main macro, NOT the regular
          xacro macro (which is hosted by ur_description).
  -->
  <xacro:include filename="$(find sema_description)/urdf/macro/ur_macro.xacro"/>
  
  <!--
    legal values:
      - hardware_interface/PositionJointInterface
      - hardware_interface/VelocityJointInterface
      - hardware_interface/EffortJointInterface

    NOTE: this value must correspond to the controller configured in the
          controller .yaml files in the 'config' directory.
  -->
  <xacro:arg name="transmission_hw_interface" default="hardware_interface/PositionJointInterface"/>
  <xacro:arg name="safety_limits" default="false"/>
  <xacro:arg name="safety_pos_margin" default="0.15"/>
  <xacro:arg name="safety_k_position" default="20"/>

  <!-- Instantiate the Gazebo robot and pass it all the required arguments. -->
  <xacro:ur_robot_gazebo
    prefix="$(arg prefix)"
    joint_limits_parameters_file="$(arg joint_limit_params)"
    kinematics_parameters_file="$(arg kinematics_params)"
    physical_parameters_file="$(arg physical_params)"
    visual_parameters_file="$(arg visual_params)"
    transmission_hw_interface="$(arg transmission_hw_interface)"
    safety_limits="$(arg safety_limits)"
    safety_pos_margin="$(arg safety_pos_margin)"
    safety_k_position="$(arg safety_k_position)"
  />

  <!--
    Attach the Gazebo model to Gazebo's world frame.

    Note: if you're looking to integrate a UR into a larger scene and need
    to add EEFs or other parts, DO NOT change this file or the 'world' link
    here. Create a NEW xacro instead and decide whether you need to add
    a 'world' link there.
  -->

  <link name="world"/>

  <xacro:if value="$(arg conveyor_belt_enabled)">
    
    <joint name="$(arg prefix)ur/world_joint" type="fixed">
      <origin xyz="0 0 0.81" rpy="0 0 0"/>   
      <parent link="world"/>
      <child link="$(arg prefix)base_link"/>
    </joint>

  </xacro:if>

  <xacro:unless value="$(arg conveyor_belt_enabled)">
   
    <joint name="$(arg prefix)ur/world_joint" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0"/>   
      <parent link="world"/>
      <child link="$(arg prefix)base_link"/>
    </joint>

  </xacro:unless>
  
  <!-- add VGC10 model and plugin  -->
  <xacro:if value="$(arg vgc10_enabled)">
    <xacro:include filename="$(find sema_description)/urdf/macro/vgc10_macro.xacro"/>
    <xacro:vgc10 name="$(arg vg_name)" prefix="$(arg prefix)"/> 
    
    <joint name="$(arg prefix)$(arg vg_name)ee_joint" type="fixed">
      <origin xyz="0 0 0.063" rpy="0 0 0"/>
      <parent link="$(arg prefix)wrist_3_link"/>
      <child link="$(arg prefix)$(arg vg_name)base_link"/>
    </joint>

  </xacro:if>
  
  <!-- add Conveyor Belt model and plugin  -->
  <xacro:if value="$(arg conveyor_belt_enabled)">
    <xacro:include filename="$(find sema_description)/urdf/macro/conveyor_belt_macro.xacro"/>
    <xacro:conveyor_belt name="$(arg cb_name)" prefix="$(arg prefix)" radius="2.5"/>  

    <joint name="$(arg prefix)$(arg cb_name)world_joint" type="fixed">
      <origin xyz="-2.8 0 0.05" rpy="0 0 0"/>
      <parent link="world"/>
      <child link="$(arg prefix)$(arg cb_name)base_link"/>
    </joint>

  </xacro:if>
  
  <!-- add Depth camera model and plugin  -->
  <xacro:if value="$(arg oak_d_enabled)">
    <xacro:arg name="camera_name"   default="oak" />
    <xacro:arg name="camera_model"  default="OAK-D-LITE" />
    <xacro:arg name="parent_frame"  default="$(arg prefix)wrist_3_link" />
    <xacro:arg name="cam_pos_x"     default="0.08" />
    <xacro:arg name="cam_roll"      default="-${pi}" />
    <xacro:arg name="cam_pitch"     default="-${pi/2}" />
  
    <xacro:include filename="$(find sema_description)/urdf/macro/depthai_camera_macro.xacro"/>
    <xacro:depthai_camera camera_name = "$(arg camera_name)" parent = "$(arg parent_frame)"
                          camera_model = "$(arg camera_model)" prefix = "$(arg prefix)"
                          x = "$(arg cam_pos_x)" R = "$(arg cam_roll)" P = "$(arg cam_pitch)"/>
  </xacro:if>
  
</robot>
