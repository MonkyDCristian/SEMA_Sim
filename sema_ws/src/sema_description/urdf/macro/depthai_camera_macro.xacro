<?xml version="1.0"?>
<robot name="depthai_camera" xmlns:xacro="http://ros.org/wiki/xacro">

<xacro:macro name="depthai_camera" params="camera_name camera_model parent base_frame 
                                           cam_pos_x cam_pos_y cam_pos_z 
                                           cam_roll cam_pitch cam_yaw
                                           size_x:=0.091 size_y:=0.028 size_z:=0.0175
                                           r:=0.8 g:=0.8 b:=0.8 a:=0.8">

    <xacro:property name="baseline" value="0.075" />
    
    <!-- base_link of the sensor -->
    <link name="${base_frame}">
      <visual>
            <origin xyz="0.0 0.0 0.0" rpy="${pi/2} 0.0  ${pi/2}"/>
            <geometry>
                <mesh filename="package://depthai_bridge/urdf/models/${camera_model}.stl" />
            </geometry>
            
            <material name="mat">
                <color rgba="${r} ${g} ${b} ${a}"/>
            </material>
        </visual>
        
        <collision name="${camera_name}_collision">
            <origin xyz="-0.006 0.0 -0.0055" rpy="${pi/2} 0.0 ${pi/2}"/>
            <geometry>
                <box size="${size_x} ${size_y} ${size_z}"/>
            </geometry>
        </collision>
        
        <inertial>
          <mass value="0.061"/>
          <inertia
            ixx="0.00001"
            iyy="0.00004"
            izz="0.00005"
            ixy="0"
            ixz="0"
            iyz="0"/>
        </inertial>
    </link>

    <joint name="${camera_name}_center_joint" type="fixed">
        <parent link="${parent}"/>
        <child link="${base_frame}"/>
        <origin xyz="${cam_pos_x} ${cam_pos_y} ${cam_pos_z}" rpy="${cam_roll} ${cam_pitch} ${cam_yaw}" />
    </joint>
    

    <!-- RGB Camera optical frame  -->
    <link name="${camera_name}_rgb_camera_optical_frame"/>
    
    <joint name="${camera_name}_rgb_camera_optical_joint" type="fixed">
        <origin xyz="0 0 0.003" rpy="0.0 0.0 0.0"/>
        <parent link="${base_frame}"/>
        <child link="${camera_name}_rgb_camera_optical_frame"/>
    </joint>

    <!-- Gazebo camera setup -->
    <gazebo reference="${base_frame}">
      <sensor type="depth" name="${camera_name}_sensor">
        <update_rate>18.0</update_rate>
    
        <camera name="${camera_name}">
          <horizontal_fov>1.20427718388</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.065</near>
            <far>10.0</far>
          </clip>
          <noise>
            <type>gaussian</type>
             <!--
             Noise is sampled independently per pixel on each frame.
             That pixel's noise value is added to each of its color
              channels, which at that point lie in the range [0,1].
              -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        
        <plugin name="depth_camera_plugin_${camera_name}" filename="libgazebo_ros_openni_kinect.so">  
           <!--
           Oak D LITE camera data: https://docs.luxonis.com/projects/hardware/en/latest/pages/DM9095.html 
           plugin config data: https://classic.gazebosim.org/tutorials?tut=ros_depth_camera&cat=connect_ros
           --> 
          <baseline>0.075</baseline>
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>depthai_camera_ir</cameraName>
          <imageTopicName>/depthai_camera/color/image_raw</imageTopicName>
          <cameraInfoTopicName>/depthai_camera/color/camera_info</cameraInfoTopicName>
          <depthImageTopicName>/depthai_camera/depth/image_raw</depthImageTopicName>
          <depthImageCameraInfoTopicName>/depthai_camera/depth/camera_info</depthImageCameraInfoTopicName>
          <pointCloudTopicName>/depthai_camera/depth/points</pointCloudTopicName>
          <frameName>${camera_name}_rgb_camera_optical_frame"</frameName>
          <distortion_k1>0.0</distortion_k1>
          <distortion_k2>0.0</distortion_k2>
          <distortion_k3>0.0</distortion_k3>
          <distortion_t1>0.0</distortion_t1>
          <distortion_t2>0.0</distortion_t2>
          <pointCloudCutoff>0.35</pointCloudCutoff>
          <pointCloudCutoffMax>10.0</pointCloudCutoffMax>
        </plugin>
      </sensor>
    </gazebo>
    
</xacro:macro>
 
</robot>

