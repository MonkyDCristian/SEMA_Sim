<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:macro name="oak_d" 
  params="
  name 
  prefix:=sema/ 
  x:=0 y:=0 z:=0 
  R:=0 P:=0 Y:=0">
   
    <!-- Oak D LITE camera data: https://docs.luxonis.com/projects/hardware/en/latest/pages/DM9095.html -->
    <!-- plugin config data: https://classic.gazebosim.org/tutorials?tut=ros_depth_camera&cat=connect_ros -->
    
    <link name="${prefix}${name}base_link"/>

    <!-- Oak D POE Camera -->
    <link name="${prefix}${name}link">
      <visual name="${name}_visual">
        <origin xyz="-0.01 0 0" rpy="-${pi/2} ${pi} -${pi/2}"/> 
        <geometry>
          <mesh filename="package://sema_models/model/oak_d_poe/mesh/oak_d_poe.dae"/>
        </geometry>
      </visual>

      <collision name="${name}_lens_collision">
        <origin xyz="0.01 0 -0.015" rpy="0 0 -${pi/2}"/>
        <geometry>
          <box size="0.13 0.035 0.1"/>
        </geometry>
      </collision>

      <inertial>
        <mass value="0.4"/>
        <inertia
          ixx="0.0002046"
          iyy="0.000095"
          izz="0.0002046"
          ixy="0"
          ixz="0"
          iyz="0"/>
      </inertial>
    </link>

    <!-- Base to camera joint -->
    <joint name="${prefix}${name}base_joint" type="fixed">
      <origin xyz="${x} ${y} ${z}" rpy="${R} ${P} ${Y}" />
      <parent link="${prefix}${name}base_link" />
      <child link="${prefix}${name}link" />
    </joint>

    <!-- Define a link for the optical frame.  This will match the sensor frame and
         be oriented in the camera convention. -->
    <link name="${prefix}${name}link_optical"/>

    <!-- Camera to optical frame joint.  This is oriented to convert between ENU and camera conventions -->
    <joint name="${prefix}${name}link_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="-${pi/2} 0 -${pi/2}" />
      <parent link="${prefix}${name}link" />
      <child link="${prefix}${name}link_optical" />
    </joint>

    <!-- Gazebo camera setup -->
    <gazebo reference="${prefix}${name}link">
      <sensor type="depth" name="${name}_sensor">
        <update_rate>18.0</update_rate>
    
        <camera name="${name}_camera">
          <horizontal_fov>1.20427718388</horizontal_fov>
          <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.065</near>
            <far>10.0</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        
        <plugin name="depth_camera_plugin_${name}" filename="libgazebo_ros_openni_kinect.so">  
          <!-- Oak D LITE camera data: https://docs.luxonis.com/projects/hardware/en/latest/pages/DM9095.html -->
          <!-- plugin config data: https://classic.gazebosim.org/tutorials?tut=ros_depth_camera&cat=connect_ros -->
          <baseline>0.075</baseline>
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>camera_ir</cameraName>
          <imageTopicName>/camera/color/image_raw</imageTopicName>
          <cameraInfoTopicName>/camera/color/camera_info</cameraInfoTopicName>
          <depthImageTopicName>/camera/depth/image_raw</depthImageTopicName>
          <depthImageCameraInfoTopicName>/camera/depth/camera_info</depthImageCameraInfoTopicName>
          <pointCloudTopicName>/camera/depth/points</pointCloudTopicName>
          <frameName>${prefix}${name}link_optical</frameName>
          <distortion_k1>0.0</distortion_k1>
          <distortion_k2>0.0</distortion_k2>
          <distortion_k3>0.0</distortion_k3>
          <distortion_t1>0.0</distortion_t1>
          <distortion_t2>0.0</distortion_t2>
          <pointCloudCutoff>0.35</pointCloudCutoff>
          <pointCloudCutoffMax>10.0</pointCloudCutoffMax>
        </plugin>
      </sensor>
    </gazebo>

  </xacro:macro>
</robot>
