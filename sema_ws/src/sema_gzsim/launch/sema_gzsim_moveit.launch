<?xml version="1.0"?>
<launch>
  <!--
    Main entry point for loading a SEMA system into Gazebo, in isolation, in the
    empty world.

    NOTE 1: as this is not a real robot, there are limits to the faithfulness
    of the simulation. Dynamic behaviour will be different from a real robot.
    Only a subset of topics, actions and services is supported. Specifically,
    interaction with the Control Box itself is not supported, as Gazebo does not
    simulate a Control Box. This means: no Dashboard server, no URScript topic
    and no force-torque sensor among other things.
  -->
  
  <!-- devices enabled -->
  <arg name="demo"                  default="false"/>
  
  <arg name="vgc10_enabled"         default="true" />
  <arg name="conveyor_belt_enabled" default="true" />
  <arg name="oak_d_enabled"         default="true" />
  
  <arg name="gazebo_gui"            default="true" />

  <!--
  Set Controllers

  Controller to publish joint state: joint_state_controller  (use always) 
  UR10 Position Controller: pos_joint_traj_controller
  VGC10 attach Center Position Controller: vgc_joint_traj_controller
  Conveyor Belt Velocity Controller: cb_joint_vel_controller
  
  Declare the controllers that are you going to use. 
  Example: Just UR10 position controller
  <arg name="robot_ctrl"   value="joint_state_controller pos_joint_traj_controller"/>
  joint_state_controller pos_joint_traj_controller vgc_joint_traj_controller cb_joint_vel_controller
  -->

  <arg name="robot_ctrl"   value="joint_state_controller pos_joint_traj_controller vgc_joint_traj_controller cb_joint_vel_controller"/>
  

  <!-- World Configuration --> 
  <include file="$(find sema_gzsim)/launch/cfg/set_word.launch">
  	<arg name="gazebo_world" value="$(find sema_gzsim)/world/sema_empty.world"/>
  	<arg name="gui"   value="$(arg gazebo_gui)" />
  </include>
  
  <!-- Spawm Robot --> 
  <include file="$(find sema_gzsim)/launch/cfg/set_robot.launch"> 
    <arg name="xacro_robot_model"     value="$(find sema_description)/urdf/sema.xacro"/>
    <arg name="vgc10_enabled"         value="$(arg vgc10_enabled)"                    />
    <arg name="conveyor_belt_enabled" value="$(arg conveyor_belt_enabled)"            />
    <arg name="oak_d_enabled"         value="$(arg oak_d_enabled)"                    />
  </include> 

  <!-- launch Controller Configuration -->  
  <include file="$(find sema_gzsim)/launch/cfg/set_ctrl.launch">
    <arg name="controller_cfg_file" value="$(find sema_control)/config/sema_controllers.yaml"/>
    <arg name="controllers"         value="$(arg robot_ctrl)"                                />
    <arg name="stopped_controllers" value="joint_group_pos_controller"                       />
  </include>

  <!-- launch Moveit! planner-->
  <include file="$(find sema_moveit)/launch/sema_moveit_planning.launch">
    <arg name="xacro_robot_model"     value="$(find sema_description)/urdf/sema.xacro"/>
    <arg name="vgc10_enabled"         value="$(arg vgc10_enabled)"                    />
    <arg name="conveyor_belt_enabled" value="$(arg conveyor_belt_enabled)"            />
    <arg name="oak_d_enabled"         value="$(arg oak_d_enabled)"                    />
    <arg name="sim"                   value="true"                                    />
  </include>

  <!-- launch Moveit! Rviz-->
  <include file="$(find sema_moveit)/launch/moveit_rviz.launch"/>
  
  <!-- launch box poses -->
  <node name="box_pose_pub" pkg="sema_gzsim" type="box_pose_publisher.py"/>

  <!-- launch box Rviz viewer -->
  <node name="publish_markers" pkg="sema_gzsim" type="publish_markers.py"/>
  
  <!-- launch Box Spawner Action Service-->
  <node name="box_spawner_act_srv" pkg="sema_gzsim" type="box_spawner_act_srv.py"/>
  
  <!-- launch Object Attacher Action Service-->
  <node name="obj_attacher_act_srv" pkg="sema_gzsim" type="obj_attacher_act_srv.py"/>
  
  <!-- launch UR Pose Register -->
  <node name="ur_pose_register" pkg="sema_gzsim" type="ur_pose_register.py"/>
  
  <!-- launch Demo Node-->
  <node name="sema_demo" pkg="sema_gzsim" type="sema_demo.py" if="$(arg demo)"/>

</launch>
