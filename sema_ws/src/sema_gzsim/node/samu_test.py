#!/usr/bin/env python3

import rospy
from sensor_msgs.msg import JointState

# https://roboticsbackend.com/ros-import-python-module-from-another-package/
from sema_moveit.move_group_python_interface import MoveGroupPythonInterface
from pose_compilation.pick_box_poses import pick_box_poses



def tf2joint_state_msg(lib_poses, pose_name):
	goal_joints = JointState()
	
	goal_joints.name = list(lib_poses[ pose_name]["ur_joints"].keys())
	goal_joints.position = list(lib_poses[ pose_name]["ur_joints"].values())

	return goal_joints


def samu_main():
	rospy.init_node("move_group_python_interface")
	mgpi = MoveGroupPythonInterface()
	mgpi.show_variable()
	
	list_joints_name = ['sema/shoulder_pan_joint', 'sema/shoulder_lift_joint', 'sema/elbow_joint', 'sema/wrist_1_joint', 'sema/wrist_2_joint', 'sema/wrist_3_joint']
	list_joints = [[0.27979846,-1.42453212,-1.96969155,-1.32503303,1.56688722,-2.85549416],
					[0.27992777,-1.42453214,-1.96969159,-1.32503274,1.56688811,-2.85536485],
					[0.28080113,-1.42453223,-1.96969186,-1.32503074,1.56689411,-2.8544915],
					[0.28307675,-1.42453248,-1.96969254,-1.32502553,1.56690973,-2.85221592],
					[0.28732288,-1.42453293,-1.96969382,-1.32501582,1.56693887,-2.84796987],
					[0.29402175,-1.42453365,-1.96969585,-1.3250005,1.56698485,-2.84127111],
					[0.30357365,-1.42453468,-1.96969873,-1.32497865,1.56705042,-2.83171937],
					[0.31630085,-1.42453605,-1.96970257,-1.32494954,1.56713778,-2.8189924],
					[0.33245163,-1.42453779,-1.96970745,-1.32491259,1.56724864,-2.80284189],
					[0.35220431,-1.42453992,-1.96971341,-1.32486741,1.56738422,-2.78308955],
					[0.37567119,-1.42454244,-1.9697205,-1.32481373,1.5675453,-2.75962307],
					[0.40290261,-1.42454538,-1.96972872,-1.32475144,1.56773221,-2.73239212],
					[0.4338909,-1.42454871,-1.96973808,-1.32468055,1.56794492,-2.70140436],
					[0.46857439,-1.42455245,-1.96974855,-1.32460122,1.56818298,-2.66672146],
					[0.50684145,-1.42455657,-1.9697601,-1.32451368,1.56844565,-2.62845506],
					[0.54853443,-1.42456105,-1.96977269,-1.32441831,1.56873183,-2.58676279],
					[0.5934537,-1.42456589,-1.96978625,-1.32431556,1.56904016,-2.54184429],
					[0.64136163,-1.42457105,-1.96980071,-1.32420597,1.569369,-2.49393718],
					[0.69198661,-1.4245765,-1.969816,-1.32409017,1.56971649,-2.44331307],
					[0.74502701,-1.42458221,-1.96983201,-1.32396884,1.57008055,-2.39027357],
					[0.80015523,-1.42458814,-1.96984866,-1.32384274,1.57045896,-2.3351463],
					[0.85702166,-1.42459427,-1.96986582,-1.32371266,1.57084929,-2.27828085],
					[0.91525868,-1.42460053,-1.96988341,-1.32357944,1.57124903,-2.22004482],
					[0.97448471,-1.42460691,-1.96990129,-1.32344396,1.57165555,-2.16081981],
					[1.03430814,-1.42461335,-1.96991935,-1.32330712,1.57206618,-2.10099741],
					[1.09433136,-1.42461981,-1.96993747,-1.32316982,1.57247818,-2.04097521],
					[1.15415479,-1.42462625,-1.96995553,-1.32303297,1.57288881,-1.98115281],
					[1.21338082,-1.42463263,-1.96997341,-1.3228975,1.57329534,-1.92192779],
					[1.27161784,-1.4246389,-1.969991,-1.32276428,1.57369508,-1.86369176],
					[1.32848427,-1.42464502,-1.97000817,-1.3226342,1.57408541,-1.80682631],
					[1.38361248,-1.42465096,-1.97002481,-1.3225081,1.57446381,-1.75169904],
					[1.43665289,-1.42465667,-1.97004082,-1.32238677,1.57482788,-1.69865955],
					[1.48727786,-1.42466212,-1.97005611,-1.32227097,1.57517537,-1.64803544],
					[1.5351858,-1.42466727,-1.97007057,-1.32216138,1.57550421,-1.60012832],
					[1.58010507,-1.42467211,-1.97008413,-1.32205863,1.57581253,-1.55520982],
					[1.62179805,-1.4246766,-1.97009672,-1.32196326,1.57609871,-1.51351756],
					[1.66006511,-1.42468072,-1.97010827,-1.32187572,1.57636138,-1.47525115],
					[1.6947486,-1.42468445,-1.97011875,-1.32179639,1.57659945,-1.44056825],
					[1.72573689,-1.42468779,-1.9701281,-1.3217255,1.57681215,-1.4095805],
					[1.7529683,-1.42469072,-1.97013632,-1.32166321,1.57699907,-1.38234955],
					[1.77643519,-1.42469325,-1.97014341,-1.32160953,1.57716014,-1.35888306],
					[1.79618787,-1.42469537,-1.97014937,-1.32156435,1.57729573,-1.33913072],
					[1.81233865,-1.42469711,-1.97015425,-1.3215274,1.57740659,-1.32298022],
					[1.82506585,-1.42469848,-1.97015809,-1.32149829,1.57749394,-1.31025324],
					[1.83461774,-1.42469951,-1.97016097,-1.32147644,1.57755951,-1.30070151],
					[1.84131662,-1.42470023,-1.970163,-1.32146112,1.57760549,-1.29400274],
					[1.84556274,-1.42470069,-1.97016428,-1.3214514,1.57763464,-1.28975669],
					[1.84783836,-1.42470093,-1.97016497,-1.3214462,1.57765026,-1.28748111],
					[1.84871172,-1.42470103,-1.97016523,-1.3214442,1.57765625,-1.28660777],
					[1.84884104,-1.42470104,-1.97016527,-1.3214439,1.57765714,-1.28647845]]
	
	goal_joints = JointState()
	goal_joints.name = list_joints_name
	goal_joints.position = list_joints[0]
	mgpi.move_group.go(joints=goal_joints , wait=True)
    
	"""
	for joints in list_joints:
		goal_joints = JointState()
		goal_joints.name = list_joints_name
		goal_joints.position = joints
		mgpi.move_group.go(joints=goal_joints , wait=True)
	"""



def main():
	rospy.init_node("move_group_python_interface")
	mgpi = MoveGroupPythonInterface()
	mgpi.show_variable()
	
	goal_joints_0 = tf2joint_state_msg(pick_box_poses, "pick_pose_real")
	goal_joints_1 = tf2joint_state_msg(pick_box_poses, "middle_place_pose_real")
	goal_joints_2 = tf2joint_state_msg(pick_box_poses, "final_place_pose_real")
	
	enter_msg = input("READY TO PLANNING: Press enter to planning a trayectory")
	 
	plan = mgpi.move_group.plan(joints=goal_joints_0)
	# or use:
	#sema_demo2.mgpi.move_group.set_joint_values_target(goal_joints_0)
	#plan = sema_demo2.mgpi.move_group.plan()

	trajectory = plan[1]
	mgpi.display_trajectory(trajectory)

	enter_msg = input("READY TO MOVE: Press enter to move the UR10")

	mgpi.move_group.go(wait=True)

	enter_msg = input("READY TO MOVE: Press enter to plan and move with one comand")

	mgpi.move_group.go(joints=goal_joints_1 , wait=True)

	enter_msg = input("READY TO MOVE: Great! Press enter one more time to move the robot to its final position")

	mgpi.move_group.go(joints=goal_joints_2 , wait=True)


if __name__ == "__main__":
		samu_main()